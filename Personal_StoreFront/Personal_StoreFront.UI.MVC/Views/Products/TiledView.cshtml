@*@model IEnumerable<Personal_StoreFront.DATA.EF.Models.Product>*@
@model IPagedList<Personal_StoreFront.DATA.EF.Models.Product>
@using X.PagedList;
@using X.PagedList.Mvc.Core;

@{
    ViewData["Title"] = "Tiled Stuffs";
}

<section class="product_section gray-section layout_padding pb-4 pt-4 mb-4">
    <div class="container">


        <div class="heading_container heading_center">
            <h2 class="text-center">
                Our <span>Stuffs</span>
            </h2>
            <p class="text-center" align="center">

                @if (User.IsInRole("Admin"))
                {

                    <a asp-action="Create">Add a Stuff </a> <span> | </span>
                }


                <a asp-action="Index">Table View</a>

            </p>
        </div>


        <div class="row mt-3">

            <div class="offset-3 col-sm-6" align="center">
                <form asp-action="TiledView" method="get">

                    @*
                    method="get" > Appends the key/value pairs from a form
                    onto the query string in our URL. The ? i the URL indicates
                    the beginning of a query string. Everything after the ?
                    is a key/value pair.

                    ?searchTerm=WhateverYouSearchedFor&category=tool

                    These key value pairs are passed to the Action as arguments
                    for the action's parameters.

                    public IActionResult TiledView(sting searchTerm)
                    *@

                    @*
                    Categories Filter Dropdown
                    *@
                    <label for="categoryId" class="custom-control-label d-block text-center">
                        Filter by Category
                    </label>
                    <select name="categoryId" class="form-control text-center mb-3" asp-items="ViewBag.CategoryId">
                        <option value="0">[Choose a Category]</option>
                    </select>

                    @*
                    inputs for search
                    *@
                    <input type="text" name="searchTerm" class="form-control text-center" placeholder="Search Stuffs..." />
                    <input type="submit" value="Go" class="btn btn-primary w-50  mt-3" align="center" />
                </form>


                @if (ViewBag.NbrResults != null)
                {
                    <p class="mt-5 p-2 alert-info text-center">
                        Showing @ViewBag.NbrResults result@(ViewBag.NbrResults > 1 ? "s" : "") for '@ViewBag.SearchTerm'...
                    </p>
                }


            </div>

            @foreach (var item in Model)
            {
                <div class="col-sm-6 col-md-4 col-lg-4 mt-5">
                    <div class="box">
                        <div class="option_container text-center">
                            <div class="options">
                                <a asp-action="Details" asp-route-id="@item.ProductId" class="option1">
                                    @item.ProductName
                                </a> 
                                <span> | </span>
                                <a asp-action="AddToCart" asp-controller="ShoppingCart" asp-route-id="@item.ProductId" class="option2">
                                    Add to Cart
                                </a>
                            </div>
                        </div>
                        <div class="img-box">
                            <img src="~/images/@item.ProductPicture" alt="@item.ProductName">
                        </div>
                        <div class="detail-box">
                            <h5 class="text-center">
                                @item.ProductName
                            </h5>
                            <h6 class="text-center">
                                @Html.DisplayFor(modelItem => item.ProductPrice)
                            </h6>
                        </div>
                    </div>
                </div>
            }

        </div>

        <div class="row mt-5">
            <div class="w-50 mx-auto text-center">
                Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
            </div>
            <div class="w-100">
                @Html.PagedListPager(
                Model,
                page => Url.Action("TiledView",
                new { page, searchTerm = ViewBag.SearchTerm, categoryId = ViewBag.Category }) // This allows us to provide the user's desired filters to every page
                )
            </div>
        </div>


    </div>
</section>
